html:

<!-- <button id="apple" class="fruit"> apple
</button>

<button id="banana" class="fruit"> banana
</button>

<button id="grapes" class="fruit"> grapes
</button>
<br>  -->

<!-- <div id="clickMeButtonDiv">
    <div id="basketOne" class="basketClass">Basket One</div>
    <div id="basketTwo" class="basketClass">Basket Two</div>
 </div> -->


<br> <br>

<!-- <div class="classA">
     <div class="classB">
     <div class="front">front</div> <br>
     <div class="back">back</div>
  </div>
</div> -->

 


 css:

border-color: #83d0c9;
border-radius: 5px;
border: 1px solid #DCDCDC;


@keyframes moveOnTopAnimation {

    75%  { left:0px; top:200px;}
    100% { left:0px; top:0px;}
}


.apple{
    width: 100px;
    height: 100px;
    background-color: red;
    position: absolute;
    animation-name: moveOnTopAnimation;
    animation-duration: 4s; 
}



##########style for flip animation##########
.front{
        background-color: yellow;
        width: 50px;
        height: 50px;
        cursor: pointer;  
    }

    .back{
        background-color: orange;
        width: 50px;
        height: 50px;
        cursor: pointer;  
    }



    .classA {
      perspective: 1000px;
  }

    /* flip the pane when hovered */
    .classA:hover .classB {
        transform: rotateY(-180deg);
    }

    .classA, .front, .back {
        width: 100px;
        height: 100px;
    }

    /* flip speed goes here */
    .classB {
        transition: 0.6s;
        transform-style: preserve-3d;
        position: relative;
    }

    /* hide back of pane during swap */
    .front, .back {
        backface-visibility: hidden;

        position: absolute;
        top: 0;
        left: 0;
    }

    /* front pane, placed above back */
    .front {
        z-index: 10;
        /* for firefox 31 */
        transform: rotateY(0deg);
    }

    /* back, initially hidden pane */
    .back {
        transform: rotateY(-180deg);
    }

    ##################################################

.front{ background-color: yellow; width: 50px; height: 5xcf0px; cursor: pointer;} 
.back{ background-color: orange; width: 50px; height: 50px; cursor: pointer;}
.classA { perspective: 1000px; } 
.classA:hover .classB {transform: rotateY(-180deg);} 
.classA, .front, .back {width: 100px; height: 100px; } 
.classB {transition: 0.6s; transform-style: preserve-3d; position: relative;} 
.front, .back { backface-visibility: hidden; position: absolute; top: 0;left: 0;} 
.front{ z-index: 10; transform: rotateY(0deg);} 
.back { transform: rotateY(-180deg);}"

    ##################################################





	


javascript:

var squareCardDiv = document.createElement("div");
var newContent = document.createTextNode("Hi there and greetings!"); 
squareCardDiv.appendChild(newContent); 
document.body.appendChild(squareCardDiv); 

document.body.removeEventListener('click', PickACardFunction);




window.print();

pickACardButton.addEventListener("click", function(event) {
	// console.log(event.target);  
});




// var pickCard = document.getElementsByClassName("pick")[0];





// removes basket from dom
// var bigBasket = document.getElementById("bigBasket");
// var basketOne = document.getElementById("basketOne");

// var garbage = bigBasket.removeChild(basketOne); 


  // **************************old work*************************************

  // $( document ).ready(function() {
  // console.log( "ready!" );


//   var pickACardButton = document.getElementById("pick");
//   pickACardButton.addEventListener('click', PickACardFunction);




//   function PickACardFunction() {
//      console.log("pick a card button clicked");



//     // creating two cards to appear on the dom attched to attach-cards-div class
//      var attachCardsDiv = document.createElement("div");
//      attachCardsDiv.className += "attach-cards-div" //adding class to the div




//      var squareCardDiv = document.createElement("div");
//      squareCardDiv.classList.add("square-card-style"); 
//      var newContent = document.createTextNode("square"); 
//      squareCardDiv.appendChild(newContent);
//      attachCardsDiv.appendChild(squareCardDiv);
//      document.body.appendChild(attachCardsDiv);


//      var borderRadiusCardDiv = document.createElement("div");
//      // borderRadiusCardDiv.className += "round-border-div" //adding class to the div
//      borderRadiusCardDiv.classList.add("border-radius-card-style");//adding css style to div
//      var newContent = document.createTextNode("round"); 
//      borderRadiusCardDiv.appendChild(newContent);
//      attachCardsDiv.appendChild(borderRadiusCardDiv)
//      document.body.appendChild(attachCardsDiv);
//   }

//   $( ".apple" ).draggable()

// });


  // **************************old work*************************************

attachCardsDiv
squareMain// array goes here
classADiv
classBDiv
squareCardDiv// css style applied here
cardFrontDiv
cardBackDiv



function attachTwoCardsOnDom(){


        var attachCardsDiv = document.createElement("div");
        attachCardsDiv.className += "attach-cards-div"// main div don't touch

    
    var squareMain = document.createElement("div");// two different style
    squareMain.className += "squareMain"

    var roundMain = document.createElement("div");// two different style
    roundMain.className += "roundMain"

 


            var classADiv = document.createElement("div");
            classADiv.className += "classA" 


        var classBDiv = document.createElement("div");
          classBDiv.className += "classB" 


          var flipCardDiv = document.createElement("div");
            // squareCardDiv.className += "cskdlksdlsd"//applying css style here


            // var textContent = document.createTextNode("i'M A CARD");


            var cardFrontDiv = document.createElement("div");
            cardFrontDiv.className += "front"


            var cardBackDiv = document.createElement("div");
            cardBackDiv.className += "back"


      var array = [ squareMain, roundMain ]
        var stylenames = ["square-card-style", "border-radius-card-style"]



        for (var i = 0; i < array.length; i++) {
            for (var i = 0; i < stylenames.length; i++) {

                flipCardDiv.appendChild(cardBackDiv);
                flipCardDiv.appendChild(cardFrontDiv);
                console.log("code works")

                flipCardDiv.classList.add(stylenames[i]);//css style added here
                classBDiv.appendChild(flipCardDiv);
                classADiv.appendChild(classBDiv);
                attachCardsDiv.appendChild(array[i].appendChild(classADiv));
                document.body.appendChild(attachCardsDiv)

            };

        };


    }









not sure about these:
// var rotatebutton = document.createElement("button");
// rotatebutton.classList.add("rotate-button-class");
// document.body.appendChild(rotatebutton);




.front{ background-color: yellow; width: 500px; height: 500px; cursor: pointer;} 

.back{ background-color: orange; width: 500px; height: 500px; cursor: pointer;} 




.classA { perspective: 1000px;} 

.classA:hover .classB, .classA.hover .classB {transform: rotateY(-180deg);} 

.classA, .front, .back {width: 100px; height: 100px; } 

.classB {transition: 0.6s; transform-style: preserve-3d; position: relative;} 

.front, .back { backface-visibility: hidden; position: absolute; top: 0;left: 0;} 

.front{ z-index: 10; transform: rotateY(0deg);} 

.back { transform: rotateY(-180deg);}"





.classA { width: 200px; height: 260px; position: relative; perspective: 1000px;} 


classB {transform-style: preserve-3d; width: 100%; height: 100%; position: absolute; transition: transform 1s; } 


.classB .front .back {margin: 0; display: block; position: absolute; width: 100%; height: 100%; backface-visibility: hidden; } 

 
.classB .front { background: red; }


.classB .back { background: blue; transform: rotateY( 180deg );}




.classA { width: 200px; height: 260px; position: relative; perspective: 1000px;} .classB {transform-style: preserve-3d; width: 100%; height: 100%; position: absolute; transition: transform 1s; } .classB .front .back {margin: 0; display: block; position: absolute; width: 100%; height: 100%; backface-visibility: hidden; } .classB .front { background: red; } .classB .back { background: blue; transform: rotateY( 180deg );}




<section class="container">
  <div id="card">
    <figure class="front">1</figure>
    <figure class="back">2</figure>
  </div>
</section>

<div class="classA">
  <div class="classB">
    <div class="back"></div>
    <div class="front"></div>
  </div>
</div>









